  <script>
jQuery(function() {
  jQuery('.swatch :radio').change(function(event) {
    var optionIndex = jQuery(this).closest('.swatch').attr('data-option-index');
    var optionValue = jQuery(this).val();
    var sortBySelect = document.querySelector('#SingleOptionSelector-'+optionIndex); 
    sortBySelect.value = optionValue; 
    sortBySelect.dispatchEvent(new Event("change"));
    var CaseOption = $('.swatch ').length;
    if(CaseOption == 2){
      SecondUnavailability();
    }else if(CaseOption == 3){
     ThirdUnavailability();
    }
   	
    
    
  });
function SecondUnavailability(){
var productJson = {{product | json}}
var variants  = productJson.variants;
  console.log(variants)
var newpossibles   = [];
var newpossibles2  = [];
var counter=0;
var option0='';
var optionnew1='';
if(document.getElementById("SingleOptionSelector-0")){
  var option0   = document.getElementById("SingleOptionSelector-0").options;
}
if(document.getElementById("SingleOptionSelector-1")){
  var option1   = document.getElementById("SingleOptionSelector-1").options;
}
  $('.single-option-selector').each(function() {
    if(counter == 0 ){
      var selectedOption0 = $(this).val();
      variants.forEach((variant) => {
        if (variant.options.includes(selectedOption0)) {
          newpossibles.push(variant.options)
        }
      })
      console.log(newpossibles) 
    }else if(counter == 1 ){
      var selectedOption1 = $(this).val();
      for (let option of option1) {
        var flag = false;
        newpossibles.forEach((variant) => {
          if (variant.includes(option.value)) {
            flag = true;
          }
        })
        if(flag === false) {
          option.removeAttribute('selected');
          option.setAttribute('disabled', 'disabled');
        } else {
          option.removeAttribute('disabled');
        }
      }
      
      $("input[name='option-1']").each(function(){
        let flag = false;
        newpossibles.forEach((possible) => {
          if (possible.includes($(this).val())) {
            flag = true;
          }
        })
        if (flag === false) {
          $(this).closest('.swatch-element').attr('disabled', 'disabled');
          $(this).closest('.swatch-element').addClass('unavailable');
          $(this).closest('.swatch-element').removeClass('Option_1available');
        } else {
          $(this).closest('.swatch-element').removeAttr('disabled', 'disabled');;
          $(this).closest('.swatch-element').removeClass('unavailable');
          $(this).closest('.swatch-element').addClass('Option_1available');
          if($('.un_avail').text() == 'Unavailable' ){
            $('.Option_1available:eq(0)').find('input').trigger('click');
          }
        }
      })
      
    }
    counter++;
  });
}
SecondUnavailability();
function ThirdUnavailability(){  
  var productJson = {{product | json}}
  const variants  = productJson.variants;  
  var possibles   = [];
  var possibles2  = [];
  var counter=0;
  var option1='';
  var option2='';
  if(document.getElementById("SingleOptionSelector-1")){
  var option1   = document.getElementById("SingleOptionSelector-1").options;
  }
  if(document.getElementById("SingleOptionSelector-2")){
  var option2   = document.getElementById("SingleOptionSelector-2").options;
  }
  var one ='',two='',three='';
  console.log('variants');
  console.log( variants)
  $('.single-option-selector').each(function() {
    alert('counter:'+counter);
    if(counter == 0){
      one =  $(this).val();
      alert(one);
      variants.forEach((variant) => {
        if (variant.options.includes($(this).val())) {
          possibles.push(variant.options)
        }
      })
      console.log('possibles');
      console.log( possibles)	
    }else if(counter == 1){
      two =  $(this).val();
      alert(two);
      for (let option of option1) {
        let flag = false;
        possibles.forEach((possible) => {
          if (possible.includes(option.value)) {
            flag = true;
          }
        })
         if (flag === false) {
            option.removeAttribute('selected');
            option.setAttribute('disabled', 'disabled');
          } else {
            option.removeAttribute('disabled');
          }
        
      }
      $("input[name='option-1']").each(function(){
        let flag = false;
        possibles.forEach((possible) => {
          if (possible.includes($(this).val())) {
            flag = true;
          }
        })
        if (flag === false) {
          $(this).closest('.swatch-element').attr('disabled', 'disabled');
          $(this).closest('.swatch-element').addClass('unavailable');
          $(this).closest('.swatch-element').removeClass('Option_1available');
        } else {
          $(this).closest('.swatch-element').removeAttr('disabled', 'disabled');;
          $(this).closest('.swatch-element').removeClass('unavailable');
          $(this).closest('.swatch-element').addClass('Option_1available');
        }
      })
    }else if(counter == 2){
      three =  $(this).val();
      alert(three)
      possibles.forEach((possible) => {
        if (possible.includes(one) && possible.includes(two)) {
            possibles2.push(possible)
        }
      })
      console.log('option-2');
      console.log(possibles2);
      for (let option of option2) {
        let   flag  = false;
        possibles2.forEach((possible) => {
          if (possible.includes(option.value)) {
            flag = true;
          }
        })
        if(flag === false) {
          option.removeAttribute('selected');
          option.setAttribute('disabled', 'disabled');
        } else {
          option.removeAttribute('disabled');
        }
      }
      $("input[name='option-2']").each(function(){
        let flag = false;
        possibles2.forEach((possible) => {
          if (possible.includes($(this).val())) {
            flag = true;
          }
        })
        if (flag === false) {
          $(this).closest('.swatch-element').attr('disabled', 'disabled');
          $(this).closest('.swatch-element').addClass('unavailable');
          $(this).closest('.swatch-element').removeClass('Option_2available');
        } else {
          $(this).closest('.swatch-element').removeAttr('disabled', 'disabled');;
          $(this).closest('.swatch-element').removeClass('unavailable');
          $(this).closest('.swatch-element').addClass('Option_2available');
          if($('.un_avail').text()=='Unavailable'){
          $('.Option_2available:eq(0)').find('input').trigger('click');
          }
		  
        }
      })
    
      
    }
    
    counter++;
  });
  
  }

  unavailability();

});   
 
</script>
  
